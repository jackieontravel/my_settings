# Define color and macros
# -----------------------
cDEF='\e[0m'
cBOLD='\e[1m'
cUNDERL='\e[4m'
cBLACK='\e[30m'
cRED='\e[31m'
cGREEN='\e[32m'
cYELLOW='\e[33m'
cBLUE='\e[34m'
cPINK='\e[35m'
cCYAN='\e[36m'
cWHITE='\e[37m'
WARNING_NF="${cBOLD}${cYELLOW}/!\ Not found /!\ ${cDEF}"
WARNING_RO="${cBOLD}${cYELLOW}/!\ Read only /!\ ${cDEF}"

export NOT_IN_MOCK=$(mount |grep chroot>/dev/null; echo $?)

###########################################################################
#  SDK2
###########################################################################

# Common function for ccsdk2
# Predefined variables from calling function:
#   fname:      original function name, i.e.: ccsdk2_XXX
#   sdk2_ver:   to meet source path, eg.: 20.1
#   build_ver:  where sources->build links to. eg.: build-1.362.62-1
#   kernel_ver: kernel version under sources/linux/kernelspace/linux-kernel/. eg.: kernel3.10-sti-KERNEL_15.4_3.10.53_18.35-1
#   uboot_ver:  where sources/sources/boot/u-boot links to. eg.: u-boot-UBOOT_v2014.01.05.2-1
#   mock_prefix:Mock prefix under /var/lib/mock. eg.: mock_prefix=fedora-19-x86_64-SDK2
#
# TODO:
#   Currently this is a handy function just for H301 with build-b2196-h301_a9 project. Expand it for general purpose
function ccsdk2_common()
{
    myself=${FUNCNAME[ 0 ]}
    
    # There are a little differences betwen inside and outside
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        sdkhome=~/src/sdk2/sdk2_${sdk2_ver}
        sdk_sources=$sdkhome/sources
        target_top=/var/lib/mock/$mock_prefix-$USER-${sdk2_ver}/root
    else
        sdkhome=/opt/STM/STLinux-2.4/devkit/sources
        sdk_sources=$sdkhome
        target_top=
    fi        

    cd $sdkhome
    alias gohome='cd $sdkhome'
	
    master=$sdk_sources/$build_ver/build/sdk2-build-master
    alias gomaster='cd $master'

    b2196=$sdk_sources/$build_ver/build/sdk2-build.b2196-h301_a9
    alias gob2196='cd $b2196'

    build2196=$sdk_sources/$build_ver/build/build-b2196-h301_a9
    alias gobuild2196='cd $build2196'

    sources=$sdk_sources
    alias gosources='cd $sources'

    kernel=$sdk_sources/sources/linux/kernelspace/linux-kernel/$kernel_ver
    alias gokernel='cd $kernel'

    stuser=$sdk_sources/sources/linux/userspace/components/st
    alias gostuser='cd $stuser'

    stmodule=$sdk_sources/sources/linux/kernelspace/modules/st
    alias gostmodule='cd $stmodule'

    uboot=$sdk_sources/sources/boot/$uboot_ver
    alias gouboot='cd $uboot'

    # Some commands are only used in Mock, and some on the other side.
	# PORTING NOTES: 'cp2mock': just do once when Mock is ready.
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        mock=$target_top/opt/STM/STLinux-2.4/devkit/
        alias gomock='cd $mock'
    
		mocktarget=$target_top/opt/STM/STLinux-2.4/devkit/armv7/target
		alias gomocktarget='cd $mocktarget'

        # internal commands to support cp2mock
		alias bash2mock='sudo cp $HOME/github/my_settings/linux/.bashrc.mock $target_top/builddir/.bashrc; sudo cp $HOME/github/my_settings/linux/.bashrc_func.sh $target_top/builddir/; echo .bashrc .bashrc_func.sh copied '
		alias fs2mock='sudo mkdir -p $target_top/builddir/tools; sudo cp $HOME/tools/fs.sh $HOME/tools/fs.py $target_top/builddir/tools; echo fs.sh fs.py copied'
        alias cc2mock='f=$target_top/builddir/.compile_env_sdk2.sh; tf=`mktemp`; echo -e "# Auto generated by 'cc2mock' command outside Mock.\nexport NOT_IN_MOCK=0" > $tf ; type $fname | tail -n +2 >> $tf ; type $myself | tail -n +2 >> $tf ; echo $fname >> $tf ; sudo cp $tf $f && rm $tf; echo $f generated.'
        
		# copy Mock related files to Mock, including Bash profile, compiling environments and fs commands
        alias cp2mock=' bash2mock; fs2mock; cc2mock'
        
        alias mkimg='cd $sdkhome/make_image && ./image_sdk2.sh -m 301'
    else
        alias setb2196='cd $b2196'

		target=$target_top/opt/STM/STLinux-2.4/devkit/armv7/target
		alias gotarget='cd $target'
    fi        


}


## Shell function to compile ST SDK2
function csdk2_151()
{
    # bind then enter mock
    sudo mount --bind /mnt/home/jackieyeh/src/sdk2/sdk2_15.1/sources/ /var/lib/mock/fedora-17-x86_64-jackieyeh_sdk2_15.1/root/opt/STM/STLinux-2.4/devkit/sources/
    /usr/bin/mock --uniqueext=jackieyeh_sdk2_15.1   --shell
}
 
 
function csdk2_152()
{
    # bind then enter mock
    sudo mount --bind /mnt/home/jackieyeh/src/sdk2/sdk2_15.2/sources/ /var/lib/mock/fedora-17-x86_64-jackieyeh_sdk2_15.2/root/opt/STM/STLinux-2.4/devkit/sources/
    /usr/bin/mock --uniqueext=jackieyeh_sdk2_15.2   --shell
}
 
function ccsdk2_152()
{
# Jackie 2015/2/24: A temporary copy, To be confirmed...
    sdkhome=~/src/sdk2/sdk2_15.2
    cd $sdkhome

    alias gohome='cd $sdkhome'

    b2120=$sdkhome/sources/build-1.362.29-1/build/sdk2-build.b2120-h410_a9
    alias gob2120='cd $b2120'

    sources=$sdkhome/sources
    alias gosources='cd $sources'

    kernel=$sdkhome/sources/sources/linux/kernelspace/linux-kernel/kernel3.10-sti-KERNEL_15.2_3.10.53_18.16-1
    alias gokernel='cd $kernel'

    stuser=$sdkhome/sources/sources/linux/userspace/components/st
    alias gostuser='cd $stuser'

    stmodule=$sdkhome/sources/sources/linux/kernelspace/modules/st
    alias gostmodule='cd $stmodule'

    uboot=$sdkhome/sources/sources/boot/u-boot-UBOOT_v2014.01.03.2-1
    alias gouboot='cd $uboot'

    mock=/var/lib/mock/fedora-17-x86_64-SDK2-jackieyeh-15.2/root/opt/STM/STLinux-2.4/devkit/
    alias gomock='cd $mock'

    mocktarget=/var/lib/mock/fedora-17-x86_64-jackieyeh_sdk2_15.2/root/opt/STM/STLinux-2.4/devkit/armv7/target
    alias gomocktarget='cd $mocktarget'
}
 
 
 
 
function csdk2_153()
{
    cd ~/src/sdk2/sdk2_15.3
    mock.sh
}

function ccsdk2_153()
{
    # set specific versions:
    sdk2_ver=15.3

    # There are a little differences betwen inside and outside
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        sdkhome=~/src/sdk2/sdk2_${sdk2_ver}
        sdk_sources=$sdkhome/sources
        target_top=/var/lib/mock/fedora-17-x86_64-SDK2-$USER-${sdk2_ver}/root
    else
        sdkhome=/opt/STM/STLinux-2.4/devkit/sources
        sdk_sources=$sdkhome
        target_top=
    fi        

    cd $sdkhome
    alias gohome='cd $sdkhome'

    b2196=$sdk_sources/build-1.362.46-1/build/sdk2-build.b2196-h301_a9
    alias gob2196='cd $b2196'

    build2196=$sdk_sources/build-1.362.46-1/build/build-b2196-h301_a9
    alias gobuild2196='cd $build2196'

    master=$sdk_sources/build-1.362.46-1/build/sdk2-build-master
    alias gomaster='cd $master'

    sources=$sdk_sources
    alias gosources='cd $sources'

    kernel=$sdk_sources/sources/linux/kernelspace/linux-kernel/kernel3.10-sti-KERNEL_15.3_3.10.53_18.24b-1
    alias gokernel='cd $kernel'

    stuser=$sdk_sources/sources/linux/userspace/components/st
    alias gostuser='cd $stuser'

    stmodule=$sdk_sources/sources/linux/kernelspace/modules/st
    alias gostmodule='cd $stmodule'

    uboot=$sdk_sources/sources/boot/u-boot-UBOOT_v2014.01.03.2-1
    alias gouboot='cd $uboot'

    mocktarget=/var/lib/mock/fedora-17-x86_64-SDK2-$USER-${sdk2_ver}/root/opt/STM/STLinux-2.4/devkit/armv7/target
    alias gomocktarget='cd $mocktarget'

    # Some commands are only used in Mock, and some on the other side.
	# PORTING NOTES: Change the "type ccsdk2_xxx" for different versions
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        mock=$target_top/opt/STM/STLinux-2.4/devkit/
        alias gomock='cd $mock'
        alias cp2mock='f=$target_top/builddir/.compile_env_sdk2_${sdk2_ver}.sh; tf=`mktemp`; echo -e "# Auto generated by 'cp2mock' command outside." > $tf ; type ccsdk2_153  | tail -n +2 | sed "1s/^/export NOT_IN_MOCK=0\n /" >> $tf; sudo cp $tf $f && rm $tf'
        alias mkimg='cd $sdkhome/make_image && ./image_sdk2.sh $*'
    else
        alias setb2196='cd $b2196'
    fi        

}

# csdk2_154, ccsdk2_154: Created 2015/10/15, derived from csdk2_153() and ccsdk2_170() (either one has newer parts)
# Add mock_prefix assigning to "/var/lib/mock/fedora-19-x86_64-SDK2-jackieyeh-" (original was fedora-17)
function csdk2_154()
{
    cd ~/src/sdk2/sdk2_15.4
    mock.sh
}

function ccsdk2_154()
{
	fname=${FUNCNAME[ 0 ]}

    # set specific versions. We'll assign the full path instead of link path, so that SVN will work.
    sdk2_ver=15.4
    build_ver=build-1.362.62-1
	kernel_ver=kernel3.10-sti-KERNEL_15.4_3.10.53_18.35-1
    uboot_ver=u-boot-UBOOT_v2014.01.05.2-1
	mock_prefix=fedora-19-x86_64-SDK2
    
    # call common settings with above variables
    ccsdk2_common
}
 

function csdk2_170()
{
    cd ~/src/sdk2/sdk2_17
    mock.sh
}

function ccsdk2_170()
{
    # set specific versions:
    sdk2_ver=17
    build_ver=build-1.400.16-1
    kernel_ver=kernel3.10-sti-KERNEL_ML_3.10.53_32.8-1
    uboot_ver=u-boot-UBOOT_v2014.01.04.5-1
    
    # Handy dir-es and aliases
    sdkhome=~/src/sdk2/sdk2_$sdk2_ver
    alias gohome='cd $sdkhome'

    cd $sdkhome

    master=$sdkhome/sources/$build_ver/build/sdk2-build-master
    alias gomaster='cd $master'

    b2196=$sdkhome/sources/$build_ver/build/sdk2-build.b2196-h301_a9
    alias gob2196='cd $b2196'

    build2196=$sdkhome/sources/$build_ver/build/build-b2196-h301_a9
    alias gobuild2196='cd $build2196'

    sources=$sdkhome/sources
    alias gosources='cd $sources'

    kernel=$sdkhome/sources/sources/linux/kernelspace/linux-kernel/$kernel_ver
    alias gokernel='cd $kernel'

    stuser=$sdkhome/sources/sources/linux/userspace/components/st
    alias gostuser='cd $stuser'

    stmodule=$sdkhome/sources/sources/linux/kernelspace/modules/st
    alias gostmodule='cd $stmodule'

    uboot=$sdkhome/sources/sources/boot/$uboot_ver
    alias gouboot='cd $uboot'

    mock=/var/lib/mock/fedora-17-x86_64-SDK2-jackieyeh-$sdk2_ver/root/opt/STM/STLinux-2.4/devkit/
    alias gomock='cd $mock'

    mocktarget=/var/lib/mock/fedora-17-x86_64-SDK2-jackieyeh-$sdk2_ver/root/opt/STM/STLinux-2.4/devkit/armv7/target
    alias gomocktarget='cd $mocktarget'
}
 

# csdk2_201, ccsdk2_201: Created 2015/10/26, derived from csdk2_154()
# Add mock_prefix assigning to "/var/lib/mock/fedora-19-x86_64-SDK2-jackieyeh-" (original was fedora-17)
function csdk2_201()
{
    cd ~/src/sdk2/sdk2_20.1
    mock.sh
}

function ccsdk2_201()
{
	fname=${FUNCNAME[ 0 ]}

    # set specific versions. We'll assign the full path instead of link path, so that SVN will work.
    sdk2_ver=20.1
    build_ver=build-1.438.8-1
	kernel_ver=kernel3.10-sti-KERNEL_20.0_3.10.65_57.8-1
    uboot_ver=u-boot-UBOOT_v2014.01.09.0-1
	mock_prefix=fedora-19-x86_64-SDK2
    
    # call common settings with above variables
    ccsdk2_common
    
}
 


###########################################################################
#  SDK1 
###########################################################################

# Mock Compile environment for SDK44.4
function csdk1_444()
{
    cd ~/src/sdk1/SDK44.4
    mock.sh
}

# Search Compile environment for SDK44.4
function ccsdk1_444()
{
    # set specific versions:
    sdk1_ver=44.4
    kernel_ver=linux-sh4-3.4.100_stm24_V9.0
    uboot_ver=u-boot-stm-v2010.09_stm24_0132
#    uboot_ver=UBOOT_ST
    
    # There are a little differences betwen inside and outside
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        sdkhome=~/src/sdk1/SDK$sdk1_ver               
        sdk_sources=$sdkhome/sources
        target_top=/var/lib/mock/fedora-19-x86_64-SDK1-$USER-$sdk1_ver/root
    else
        sdkhome=/opt/STM/SDK/SDK$sdk1_ver
        sdk_sources=$sdkhome
        target_top=
    	STMCPATH=/opt/STM/STMCR2012.2.1/bin
    	echo $PATH |grep $STMCPATH > /dev/null
    	if [ "$?" -eq "1" ]; then
    	    export PATH=$STMCPATH:$PATH
    	fi
    fi        
    
    alias gohome='cd $sdkhome'
    cd $sdkhome

    sources=$sdk_sources
    alias gosources='cd $sources'

    kernel=$sdk_sources/$kernel_ver
    alias gokernel='cd $kernel'

    sdk=$sdk_sources/stapisdk
    alias gosdk='cd $sdk'
    
    apilib=$sdk/apilib
    alias goapilib='cd $apilib'
    
    bin=$sdk/bin
    alias gobin='cd $bin'
    
    stapp=$sdk/stapp
    alias gostapp='cd $stapp'
    
    stdebug=$sdk/stdebug
    alias gostdebug='cd $stdebug'
    
    uboot=$sdk_sources/$uboot_ver
    alias gouboot='cd $uboot'
    
    target=$target_top/opt/STM/STLinux-2.4/devkit/sh4/target
    alias gotarget='cd $target'
    
    # Some commands are only used in Mock, and some on the other side.
    if [ "$NOT_IN_MOCK" -eq "1" ] ; then
        mock=$target_top/opt/STM/SDK/SDK$sdk1_ver
        alias gomock='cd $mock'
        alias cp2mock='f=$target_top/builddir/.compile_env_sdk${sdk1_ver}.sh; tf=`mktemp`; echo -e "# Auto generated by 'cp2mock' command outside." > $tf ; type ccsdk1_444  | tail -n +2 >> $tf; sudo cp $tf $f && rm $tf'
        alias mkimg='cd $sdkhome/make_image && ./image_sdk1.sh $*'
    else
        alias set237='cd $sdk/bin; source setenv.sh  B2141_H237C2_LINUX; gostapp'
    fi        

    ############################################
    #### Commands to generate tags:
    #   cd $sdk_sources/stapisd && ctags -R .
    #   cd $uboot && ctags -R .
    #   cd $kernel && ctags -R .
    #### Check tags directly via vi:
    #   vi -t <tag>
    #   Example:
    #       vi -t drive_stat_acct
    #### Get tag location
    #   ft <tag>
    #   Example:
    #       ft drive_stat_acct
    #### Possible issues:
    #   1. How to update tags files automatically. 
    #       -- may refer to http://stackoverflow.com/questions/155449/vim-auto-generate-ctags
    #### TODO
    #   This seems a perfect parsing method: 
    #       pyctags: https://code.google.com/p/pyctags/
    #       NOTE: Before using it, do this: export PYTHONPATH=/home/jackieyeh/develop/pyctags-0.5.0
    #       TEST: python /home/jackieyeh/develop/pyctags-0.5.0/examples/sample.py
    #   This seems another simple approach:
    #       http://search.cpan.org/~smueller/Parse-ExuberantCTags/
    function ftag() 
    { 
        tags1=$sdk_sources/stapisdk/tags
        tags2=$uboot/tags
        tags3=$kernel/tags
    
        for i in $tags{1..3}; do  #<----- The last index (3 in current case) is hard-coded.... TODO: find a better way to assign it.
            grep ^$1 $tags${i} -w --color
            if [ "$?" == "0" ]; then
            
                echo -ne "${cCYAN}=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n"
                echo -ne "From $tags${i}\n"
                echo -ne "PREFIX= $(relpath $(dirname $tags${i}) .)/\n"
                echo -ne "=-=-=-/\/\/\ ctags results=-=-=-=|=-=-= fs results\/\/\/\/\/=-=-=-=-=-=-=-=-=-=\n"
                echo -ne "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=${cDEF}\n"
            fi
            
            for f in `grep ^$1 $tags${i} -w  |cut -f 2`; do 
                fsopt=`relpath $tags${i}/../$f .` fs $1 -w; 
            done; 
        done;
           
        #####            
        #TODO: tags file has special handling in field 3:
        # (example to search 'A', first one is on line 289, second searchs for /^A  := lib$/ pattern
        # line:     
        #   A       apilib/src/st3fx/src/glmath.c   289;"   d       file:
        # regular expression:
        #   A       apilib/src/st2fx/src/freetype-2.3.7/source/builds/compiler/win-lcc.mk   /^A  := lib$/;" m
        # I can do more to goto the specific line.
        # currently above is just a beta version.
    }
    alias ft='ftag'


}
    
 
## environment setup for Android
## Jackie 2015/3/26: We have public CCACHE_DIR for this. remove private folder to save space.
#export CCACHE_DIR=/home/jackieyeh/ccache
#export CCACHE_SIZE=32G



#######################################################################################
# Knowledge Base
#
#   Tips about bash script
#	# Get the funcname automatically. REF: http://stackoverflow.com/questions/9146623/in-bash-is-it-possible-to-get-the-function-name-in-function-body
#	fname=${FUNCNAME[ 0 ]}
#
#   # Determine if we are in Mock
#   # REF: http://stackoverflow.com/questions/75182/detecting-a-chroot-jail-from-within
#   export NOT_IN_MOCK=$(mount |grep chroot>/dev/null; echo $?)
#
#######################################################################################
    

#######################################################################################



